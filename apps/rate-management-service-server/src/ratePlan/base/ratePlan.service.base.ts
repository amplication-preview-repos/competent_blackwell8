/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RatePlan as PrismaRatePlan } from "@prisma/client";

export class RatePlanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RatePlanCountArgs, "select">): Promise<number> {
    return this.prisma.ratePlan.count(args);
  }

  async ratePlans<T extends Prisma.RatePlanFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RatePlanFindManyArgs>
  ): Promise<PrismaRatePlan[]> {
    return this.prisma.ratePlan.findMany<Prisma.RatePlanFindManyArgs>(args);
  }
  async ratePlan<T extends Prisma.RatePlanFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RatePlanFindUniqueArgs>
  ): Promise<PrismaRatePlan | null> {
    return this.prisma.ratePlan.findUnique(args);
  }
  async createRatePlan<T extends Prisma.RatePlanCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RatePlanCreateArgs>
  ): Promise<PrismaRatePlan> {
    return this.prisma.ratePlan.create<T>(args);
  }
  async updateRatePlan<T extends Prisma.RatePlanUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RatePlanUpdateArgs>
  ): Promise<PrismaRatePlan> {
    return this.prisma.ratePlan.update<T>(args);
  }
  async deleteRatePlan<T extends Prisma.RatePlanDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RatePlanDeleteArgs>
  ): Promise<PrismaRatePlan> {
    return this.prisma.ratePlan.delete(args);
  }
}
